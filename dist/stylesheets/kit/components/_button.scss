/**
 * Component Button.
 *
 * @requires {function}    px-to-em
 * @requires {mixin}       round
 * @requires {placeholder} %btn-group__item
 * @requires {placeholder} %emt--alignment
 * @requires {placeholder} %emt--medium
 * @requires {placeholder} %emt--size
 * @requires button.group
 * @requires element
 */

// =============================================================================
// Button
// =============================================================================

%btn {
    @extend %btn--length;
    @extend %btn--mean;
    @extend %btn--state;
    @extend %btn--variant;
    @extend %emt--alignment !optional;
    @extend %emt--medium !optional;
    @extend %emt--shape !optional;
    @extend %emt--size !optional;

    align-items: center;
    background-color: map-get($button-background, initial);
    background-color: var(--button-background-color, map-get($button-background, initial));
    border: {
        color: map-get($button-border-color, initial);
        color: var(--button-border-color, map-get($button-border-color, initial));
        radius: $button-border-radius;
        width: $button-border-size;
        style: solid;
    }
    color: map-get($button-color, initial);
    color: var(--button-color, map-get($button-color, initial));
    cursor: pointer;
    display: inline-flex;
    justify-content: center;
    letter-spacing: px-to-em($button-letter-spacing);
    outline: 0;
    padding: {
        bottom: 0;
        top: 0;
    }
    text-align: center;
    transition:
        background-color 0.2s,
        border-color 0.2s,
        box-shadow 0.2s,
        color 0.2s;
    user-select: none;
    white-space: nowrap;

    &[class] {
        text-decoration: none;
    }

    @media screen {
        box-shadow: $button-box-shadow;
        text-shadow: $button-text-shadow;
    }
}


.btn {
    @extend %btn;
    @extend %btn__event;
    @extend %btn-group__item !optional;

    text-transform: uppercase;
}

/**
 * Modifiers.
 */

/**
 * Button, length by indentation.
 */

%btn--length {
    @each $modifier in map-keys($button-indent) {
        &.\--#{$modifier} {
            @extend %btn--#{$modifier};
        }
    }
    @each $modifier in map-keys($button-indent) {
        $indent: map-get($button-indent, $modifier);

        @at-root %btn--#{$modifier} {
            padding: {
                left: $indent;
                right: $indent;
            }
        }
    }
}

/**
 * Button, primary.
 */

%btn--variant {
    &.\--primary {
        background-color: map-get($button--primary-background, initial);
        background-color: var(--button--primary-background-color, map-get($button--primary-background, initial));
        
        border-color: map-get($button--primary-border-color, initial);
        border-color: var(--button--primary-border-color, map-get($button--primary-border-color, initial));

        color: map-get($button--primary-color, initial);
        color: var(--button--primary-color, map-get($button--primary-color, initial));
    }
}

/**
 * Button, secondary.
 */

%btn--variant {
    &.\--secondary {
        background-color: map-get($button--secondary-background, initial);
        background-color: var(--button--secondary-background-color, map-get($button--secondary-background, initial));

        border-color: map-get($button--secondary-border-color, initial);
        border-color: var(--button--secondary-border-color, map-get($button--secondary-border-color, initial));
        
        color: map-get($button--secondary-color, initial);
        color: var(--button--secondary-color, map-get($button--secondary-color, initial));
    }
}

/**
 * Button, tertiary.
 */

%btn--variant {
    &.\--tertiary {
        background-color: map-get($button--tertiary-background, initial);
        background-color: var(--button--tertiary-background, map-get($button--tertiary-background, initial));

        border-color: map-get($button--tertiary-border-color, initial);
        border-color: var(--button--tertiary-border-color, map-get($button--tertiary-border-color, initial));

        color: map-get($button--tertiary-color, initial);
        color: var(--button--tertiary-color, map-get($button--tertiary-color, initial));
    }
}

/**
 * Button, themes.
 */

%btn--variant {
    @each $modifier, $theme in $button-theme {
        $color: map-get($theme, 50);

        &.\--#{$modifier} {
            background-color: $color;
            background-color: var(--button--#{$modifier}-background-color, $color);

            border-color: darken($color, 3%);
            border-color: var(--button--#{$modifier}-border-color, darken($color, 3%));

            color: $white;
            color: var(--button--#{$modifier}-color, $white);
        }
    }
}

/**
 * States.
 */

/**
 * Button, active (aka pressed).
 */

%btn--state {
    &:active,
    &.is-active {
        &:not(:disabled):not(.is-disabled) {
            background-color: map-get($button-background, active);
            background-color: var(--button--is-active-background-color, map-get($button-background, active));

            border-color: map-get($button-border-color, active);
            border-color: var(--button--is-active-border-color, map-get($button-border-color, active));
            
            color: map-get($button-color, active);
            color: var(--button--is-active-color, map-get($button-color, active));

            box-shadow: none;
            
            &.\--primary {
                background-color: map-get($button--primary-background, active);
                background-color: var(--button--is-active--primary-background-color, map-get($button--primary-background, active));

                border-color: map-get($button--primary-border-color, active);
                border-color: var(--button--is-active--primary-border-color, map-get($button--primary-border-color, active));

                color: map-get($button--primary-color, active);
                color: var(--button--is-active--primary-color, map-get($button--primary-color, active));
            }
            &.\--secondary {
                background-color: map-get($button--secondary-background, active);
                background-color: var(--button--is-active--secondary-background-color, map-get($button--secondary-background, active));

                border-color: map-get($button--secondary-border-color, active);
                border-color: var(--button--is-active--secondary-border-color, map-get($button--secondary-border-color, active));

                color: map-get($button--secondary-color, active);
                color: var(--button--is-active--secondary-color, map-get($button--secondary-color, active));
            }
            &.\--tertiary {
                background-color: map-get($button--tertiary-background, active);
                background-color: var(--button--is-active--tertiary-background-color, map-get($button--tertiary-background, active));

                border-color: map-get($button--tertiary-border-color, active);
                border-color: var(--button--is-active--tertiary-border-color, map-get($button--tertiary-border-color, active));

                color: map-get($button--tertiary-color, active);
                color: var(--button--is-active--tertiary-color, map-get($button--tertiary-color, active));
            }

            @each $modifier, $theme in $button-theme {
                $color: lighten(map-get($theme, 20), 2%);

                &.\--#{$modifier} {
                    background-color: $color;
                    background-color: var(--button--is-active--#{$modifier}-background-color, $color);

                    border-color: darken($color, 3%);
                    border-color: var(--button--is-active--#{$modifier}-border-color, darken($color, 3%));

                    color: $white;
                    color: var(--button--is-active--#{$modifier}-color, $white);
                }
            }
        }
    }
}

/**
 * Button, disabled.
 * 1. We need to increase specifity.
 */

%btn--state {
    &:disabled,
    &.is-disabled {
        // background-color: map-get($button-background, disable);
        // border-color: map-get($button-border-color, disable);
        box-shadow: none;
        // color: map-get($button-color, disable);
        cursor: not-allowed;
        opacity: 0.5;
        text-shadow: none;

        &::after {
            content: none;
        }

        @supports (filter: grayscale(100%)) {
            @media screen {
                filter: grayscale(80%);
            }
        }

        // &.\--primary {
        //     background-color: map-get($button--primary-background, disable);
        //     border-color: map-get($button--primary-border-color, disable);
        //     color: map-get($button--primary-color, disable);
        // }
        // &.\--secondary {
        //     background-color: map-get($button--secondary-background, disable);
        //     border-color: map-get($button--secondary-border-color, disable);
        //     color: map-get($button--secondary-color, disable);
        // }
        // &.\--tertiary {
        //     background-color: map-get($button--tertiary-background, disable);
        //     border-color: map-get($button--tertiary-border-color, disable);
        //     color: map-get($button--tertiary-color, disable);
        // }

        // @each $modifier, $theme in $button-theme {
        //     $color: map-get($theme, 50);

        //     &.\--#{$modifier} {
        //         background-color: $color;
        //         border-color: darken($color, 3%);
        //         color: $white;
        //     }
        // }
    }
}

/**
 * Button, read-only.
 */

%btn--state {
    &:readonly,
    &.is-readonly {}
}

/**
 * Button, focused.
 */

%btn--state {
    &:focus,
    &.is-focused {
        &:not(:disabled):not(.is-disabled):not(.is-readonly) {
            background-color: map-get($button-background, focus);
            background-color: var(--button--is-focused-background-color, map-get($button-background, focus));

            border-color: map-get($button-border-color, focus);
            border-color: var(--button--is-focused-border-color, map-get($button-border-color, focus));

            color: map-get($button-color, focus);
            color: var(--button--is-focused-color, map-get($button-color, focus));

            text-decoration: none;

            &.\--primary {
                background-color: map-get($button--primary-background, focus);
                background-color: var(--button--is-focused--primary-background-color, map-get($button--primary-background, focus));

                border-color: map-get($button--primary-border-color, focus);
                border-color: var(--button--is-focused--primary-border-color, map-get($button--primary-border-color, focus));

                color: map-get($button--primary-color, focus);
                color: var(--button--is-focused--primary-color, map-get($button--primary-color, focus));
            }
            &.\--secondary {
                background-color: map-get($button--secondary-background, focus);
                background-color: var(--button--is-focused--secondary-background-color, map-get($button--secondary-background, focus));

                border-color: map-get($button--secondary-border-color, focus);
                border-color: var(--button--is-focused--secondary-border-color, map-get($button--secondary-border-color, focus));

                color: map-get($button--secondary-color, focus);
                color: var(--button--is-focused--secondary-color, map-get($button--secondary-color, focus));
            }
            &.\--tertiary {
                background-color: map-get($button--tertiary-background, focus);
                background-color: var(--button--is-focused--tertiary-background-color, map-get($button--tertiary-background, focus));

                border-color: map-get($button--tertiary-border-color, focus);
                border-color: var(--button--is-focused--tertiary-border-color, map-get($button--tertiary-border-color, focus));

                color: map-get($button--tertiary-color, focus);
                color: var(--button--is-focused--tertiary-color, map-get($button--tertiary-color, focus));
            }

            @each $modifier, $theme in $button-theme {
                $color: lighten(map-get($theme, 20), 8%);

                &.\--#{$modifier} {
                    background-color: $color;
                    background-color: var(--button--is-focused--#{$modifier}-background-color, $color);

                    border-color: darken($color, 3%);
                    border-color: var(--button--is-focused--#{$modifier}-border-color, darken($color, 3%));

                    color: $white;
                    color: var(--button--is-focused--#{$modifier}-color, $white);
                }
            }
        }
    }
}

/**
 * Button, hovered.
 */

%btn--state {
    &:hover,
    &.is-hovered {
        @extend %btn--state:focus;
    }
}

/**
 * Context.
 */

// .has-component {}

// =============================================================================
// Subcomponents
// =============================================================================

// Button event
// =============================================================================

%btn__event {
    position: relative;

    &::after {
        @include round;
        @include size(2em);

        background-color: rgba($white, 0.75);
        content: "";
        display: inline-block;
        left: 50%;
        opacity: 0;
        pointer-events: none;
        position: absolute;
        top: 50%;
        transform: translate(-50%, -50%) scale(6);
        transition:
            opacity 0.6s,
            transform 1.2s map-get($animation-easing, out-cubic);
    }
}

/**
 * States.
 */

/**
 * Button event, active.
 */

%btn__event:active {
    &::after {
        opacity: 1;
        transform: translate(-50%, -50%) scale(0);
        transition-duration: 0s;
    }
}
