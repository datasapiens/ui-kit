/**
 * Component Modal.
 *
 * @requires {function}    px-to-em
 * @requires {mixin}       acceleration
 * @requires {mixin}       stretch
 * @requires {placeholder} %ico
 * @requires {placeholder} %ico--ios-close-outline
 * @requires {variable}    $animation-easing
 * @requires animation.fade
 * @requires animation.scale
 * @requires animation.visibility
 * @requires ico
 */

// =============================================================================
// Modal
// =============================================================================

/**
 * TODO: Implement content gradients.
 */

.mod {
    @include acceleration;
    @include stretch(fixed, 0, 0);

    align-items: center;
    display: flex;
    justify-content: center;
    pointer-events: none;
    visibility: hidden;
    z-index: $modal-index;

    @media print {
        display: none;
    }
}

/**
 * Modifiers.
 */

/**
 * Modal, expanded.
 */

.mod {
    &.\--expand {
        .mod__container {
            max-width: 1400px;
            width: 100vw;
        }
    }
}

/**
 * States.
 */

/**
 * Modal, turned off.
 * 1. We need to increase specifity to beat the `is-on` state.
 */

.mod {
    &.is-off[class] {       /* 1 */
        animation:
            fade--out 0.4s 0.4s both,
            visibility--hide 0.3s 0.6s both;
        pointer-events: none;
        // visibility: hidden;

        .mod__container {
            animation:
                scale--100-50 0.3s 0.2s map-get($animation-easing, in-out-circ) both,
                fade--out 0.3s both;
        }
        .mod__control {
            animation:
                slide--right 0.3s map-get($animation-easing, in-out-circ) forwards,
                fade--out 0.2s both;
        }
    }
}

/**
 * Modal, turned on.
 */

.mod {
    &.is-on {
        animation: fade--in 0.2s both;
        pointer-events: initial;
        visibility: visible;

        .mod__container {
            animation:
                scale--50-100 0.3s 0.1s map-get($animation-easing, in-out-circ) both,
                fade--in 0.3s 0.2s both;
        }
        .mod__control {
            animation:
                slide--right-reverse 0.3s 0.4s map-get($animation-easing, in-out-circ) forwards,
                fade--in 0.2s 0.5s both;
        }
    }
}

/**
 * Context.
 */

// .has-component {}

// =============================================================================
// Subcomponents
// =============================================================================

// Modal container
// =============================================================================

.mod__container {
    display: flex;
    flex-direction: column;
    max: {
        height: calc(
            100vh -
            2 * #{1.125 * $modal-indent + $modal-control-size}
        );
        width: map-get($modal-size, max);
    }
    padding: $modal-indent;
    // pointer-events: initial;
    position: relative;
    z-index: $modal-index + 1;

    /**
     * Container faux background
     */

    &::before {
        @include stretch(
            absolute,
            0,
            0
        );
        background-color: $modal-background;
        border-radius: $modal-border-radius;
        box-shadow: $modal-box-shadow;
        content: "";
    }

    @media (min-width: nth($modal-breaks, 1)) {
        min-width: nth($modal-breaks, 1);
        padding: {
            left: 2 * $modal-indent;
            right: 2 * $modal-indent;
        }

        &::before {
            left: $modal-indent;
            right: $modal-indent;
        }
    }
}

// Modal region
// =============================================================================

%mod__region {
    border: 0 dotted $modal-head-border-color;
    padding:
        0.5 * $modal-indent
        $modal-indent;
    position: relative;
}

// Modal header
// =============================================================================

.mod__head {
    @extend %mod__region;

    border: {
        bottom-width: $modal-head-border-size;
        style: solid;
    }
    margin-bottom: 0.5 * $modal-indent;
    padding-top: 0;
}

// Modal title
// =============================================================================

.mod__title {
    @extend h5 !optional;

    margin: 0;
}

// Modal body
// =============================================================================

.mod__body {
    max-width: calc(100vw - 2 * #{$modal-indent});
    min: {
        height: map-get($modal-size, min);
    }
    overflow: auto;
    padding: 0 $modal-indent;
    position: relative;
    z-index: 1;

    // > :last-child {
    //     margin-bottom: 0;
    // }

    @media (min-width: nth($modal-breaks, 1)) {
        max-width: calc(100vw - 4 * #{$modal-indent});
        min-width: nth($modal-breaks, 1) - 4 * $modal-indent;
    }

    /**
     * Gradients.
     */

    @supports (position: sticky) {
        &::after,
        &::before {
            background-image: linear-gradient(
                0deg,
                rgba($modal-background, 1) 0%,
                rgba($modal-background, 0) 100%
            );
            content: "";
            display: block;
            height: $modal-indent;
            left: 0;
            position: sticky;
            right: 0;
        }
        &::after {
            bottom: 0;
        }
        &::before {
            top: 0;
            transform: rotate(180deg);
        }
    }
}

// Modal footer
// =============================================================================

.mod__foot {
    @extend %mod__region;

    border-top-width: $modal-head-border-size;
    margin-top: 0.5 * $modal-indent;
    padding-top: $modal-indent;
}

// Modal control
// =============================================================================

.mod__control {
    color: map-get($modal-control-color, initial);
    cursor: pointer;
    font-size: px-to-rem($modal-control-size);
    opacity: 0;
    position: absolute;
    transition: color 0.2s;
    z-index: $modal-index + 1;
}

/**
 * Modifiers.
 */

/**
 * Modal control, close.
 */

.mod__control {
    &.\--close {
        right: $modal-indent;
        top: $modal-indent;

        &::before {
            @extend %ico !optional;
            @extend %ico--ios-close-outline !optional;
        }
    }
}

/**
 * States.
 */

/**
 * Modal control, hovered.
 */

.mod__control {
    &:hover {
        color: map-get($modal-control-color, hover);
    }
}
