/**
 * Component Navigation/Pagination.
 *
 * @requires {function}    px-to-rem
 * @requires {placeholder} %btn__event
 * @requires {placeholder} %ico
 * @requires button
 * @requires ico
 */

// =============================================================================
// Pagination navigation
// =============================================================================

.nav-pagination {
    @extend %nav-pagination__cell;
    @extend .nav-pagination.--left;

    align-items: center;
}

/**
 * Modifiers.
 */

/**
 * Pagination, block.
 */

%nav-pagination--block {
    display: flex;
}

.nav-pagination {
    &.--block {
        @extend %nav-pagination--block;
    }
}

/**
 * Pagination, centered.
 */

.nav-pagination {
    &.--center {
        @extend %nav-pagination--block;

        justify-content: center;

        .nav-pagination__cell + .nav-pagination__cell {
            margin: {
                left: 0;
                right: $navigation-pagination-item-indent;
            }
        }
    }
}

/**
 * Pagination, aligned left.
 */

.nav-pagination {
    &.--left {
        @extend %nav-pagination--block;

        justify-content: flex-start;

        .nav-pagination__cell {
            margin-left: 0;
        }
    }
}

/**
 * Pagination, aligned right.
 */

.nav-pagination {
    &.--right {
        @extend %nav-pagination--block;

        justify-content: flex-end;

        .nav-pagination__cell {
            margin: {
                left: $navigation-pagination-item-indent;
                right: 0;
            }
        }
    }
}

/**
 * States.
 */

// .is-component-state

/**
 * Context.
 */

// .has-component

// =============================================================================
// Subcomponents
// =============================================================================

// Pagination inset
// =============================================================================

%nav-pagination__cell {
    display: inline-flex;
    flex-wrap: wrap;
}

.nav-pagination__cell {
    @extend %nav-pagination__cell;

    margin: {
        left: $navigation-pagination-item-indent;
        right: $navigation-pagination-item-indent;
    }
}

// Pagination item
// =============================================================================

%nav-pagination__item {
    // color: map-get($navigation-pagination-item-color, initial);
    border: $navigation-pagination-item-border-size solid transparent;
    display: inline-block;
    font: {
        weight: $navigation-pagination-item-font-weight;
        size: px-to-rem($navigation-pagination-item-font-size);
    }
    height: $navigation-pagination-item-size;
    line-height:
        $navigation-pagination-item-size -
        2 * $navigation-pagination-item-border-size;
    min-width: $navigation-pagination-item-size;
    padding: 0 $navigation-pagination-item-indent;
    text-align: center;
}

.nav-pagination__item {
    @extend %nav-pagination__item;

    background: {
        // $c: map-get($navigation-pagination-item-background, initial);

        // @if type-of($c) == list {
        //     color: nth($c, 2);
        //     image: linear-gradient(
        //         160deg,
        //         rgba(nth($c, 3), 0.25) 0%,
        //         rgba(nth($c, 2), 0.00) 25%,
        //         rgba(nth($c, 1), 0.25) 75%
        //     );
        // } @else {
        //     color: $c;
        // }
        color: map-get($navigation-pagination-item-background, initial)
    }
    border: {
        color: map-get($navigation-pagination-item-border-color, initial);
        radius: $navigation-pagination-item-border-radius;
    }
    box-shadow: $navigation-pagination-item-box-shadow;
    color: map-get($navigation-pagination-item-color, initial);
    cursor: pointer;
    margin: 0.5 * $navigation-pagination-item-indent;
    text-decoration: none;
    transition:
        background-color 0.2s,
        border-color 0.2s,
        box-shadow 0.2s,
        color 0.2s;

    &:first-of-type {
        margin-left: 0;
    }
    &:last-of-type {
        margin-right: 0;
    }

    &:not(.is-disabled) {
        @extend %btn__event !optional;
    }
}

/**
 * Modifiers.
 */

// .component--modifier

/**
 * States.
 */

/**
 * Pagination item, active.
 */

.nav-pagination__item[class] {
    &:active,
    &.is-active {
        &:not(.is-disabled) {
            background: {
                // $c: map-get($navigation-pagination-item-background, active);

                // @if type-of($c) == list {
                //     color: nth($c, 2);
                //     image: linear-gradient(
                //         160deg,
                //         rgba(nth($c, 3), 0.25) 0%,
                //         rgba(nth($c, 2), 0.25) 50%,
                //         rgba(nth($c, 1), 0.25) 100%
                //     );
                // } @else {
                //     color: $c;
                // }
                color: map-get($navigation-pagination-item-background, active)
            }
            border-color: map-get($navigation-pagination-item-border-color, active);
            box-shadow: none;
            color: map-get($navigation-pagination-item-color, active);
        }
    }
}

/**
 * Pagination item, disabled.
 */

.nav-pagination__item {
    &.is-disabled {
        background: {
            // $c: map-get($navigation-pagination-item-background, disable);

            // @if type-of($c) == list {
            //     color: nth($c, 2);
            //     image: linear-gradient(
            //         160deg,
            //         rgba(nth($c, 3), 0.25) 0%,
            //         rgba(nth($c, 2), 0.25) 50%,
            //         rgba(nth($c, 1), 0.25) 100%
            //     );
            // } @else {
            //     color: $c;
            // }
            color: map-get($navigation-pagination-item-background, disable)
        }
        border-color: map-get($navigation-pagination-item-border-color, disable);
        box-shadow: none;
        color: map-get($navigation-pagination-item-color, disable);
        cursor: not-allowed;
    }
}

/**
 * Pagination item, focused.
 */

.nav-pagination__item {
    &:focus:not(.is-disabled) {
        @extend .nav-pagination__item:hover;
    }
}

/**
 * Pagination item, hovered.
 */

.nav-pagination__item {
    &:hover:not(.is-disabled) {
        background: {
            // $c: map-get($navigation-pagination-item-background, hover);

            // @if type-of($c) == list {
            //     color: nth($c, 2);
            //     image: linear-gradient(
            //         160deg,
            //         rgba(nth($c, 3), 0.25) 0%,
            //         rgba(nth($c, 2), 0.25) 50%,
            //         rgba(nth($c, 1), 0.25) 100%
            //     );
            // } @else {
            //     color: $c;
            // }
            color: map-get($navigation-pagination-item-background, hover)
        }
        border-color: map-get($navigation-pagination-item-border-color, hover);
        color: map-get($navigation-pagination-item-color, hover);
    }
}

// Pagination control
// =============================================================================

.nav-pagination__control {
    @extend .nav-pagination__item;
}

/**
 * Modifiers.
 */

/**
 * Pagination `previous` control.
 */

.nav-pagination__control {
    &.--prev {
        @extend .nav-pagination__control;

        &::before {
            @extend %ico !optional;
            @extend %ico--#{map-fetch($navigation-pagination-control-icon, prev)} !optional;
        }
    }
}

/**
 * Pagination `next` control.
 */

.nav-pagination__control {
    &.--next {
        @extend .nav-pagination__control;

        &::before {
            @extend %ico !optional;
            @extend %ico--#{map-fetch($navigation-pagination-control-icon, next)} !optional;
        }
    }
}

// Pagination spacer
// =============================================================================

.nav-pagination__spacer {
    @extend %nav-pagination__item;

    min-width: 0;
    padding: {
        left: 0.5 * $navigation-pagination-item-indent;
        right: 0.5 * $navigation-pagination-item-indent;
    }
}
