/**
 * Component List/Card.
 *
 * @requires {mixin}       acceleration
 * @requires {variable}    $animation-easing
 */

// =============================================================================
// Card list
// =============================================================================

.lst-card {
    margin-bottom: $list-card-gutter;

    @media (min-width: nth($list-card-breaks, 1)) {
        display: flex;
        flex: {
            direction: column;
            flow: row wrap;
        }
        margin: {
            right: (-1) * $list-card-gutter;
        }
        width: calc(100% + #{$list-card-gutter});
    }

    @supports (display: grid) {
        @media (min-width: nth($list-card-breaks, 1)) {
            display: grid;
            grid-gap: $list-card-gutter;
            margin-right: 0;
            width: 100%;
        }
        @each $break in $list-card-breaks {
            @media (min-width: $break) {
                grid-template-columns: repeat(
                    #{index($list-card-breaks, $break) + 1},
                    1fr
                );
            }
        }
    }
}

/**
 * Modifiers.
 */

// .component--modifier {}

// .component {
//     &.--modifier {}
// }

/**
 * States.
 */

/**
 * Card list, active (i.e. animated enter).
 */

.lst-card {
    &.is-active {
        .lst-card__item {
            @include acceleration;

            animation: lst-card__item--enter 0.3s map-get($animation-easing, in-out-circ) both;
            transform-origin: 50% 0;
        }
    }
}

/**
 * Context.
 */

// .has-component {}

/**
 * Animations.
 */

// @keyframes component-animation {}

// =============================================================================
// Subcomponents
// =============================================================================

// Card list item
// =============================================================================

/**
 * 1. We need to increase specifity.
 */

.lst-card__item {
    &[class][class] {
        margin-bottom: $list-card-gutter;
    }

    @each $break in $list-card-breaks {
        $fraction: index($list-card-breaks, $break) + 1;

        @media (min-width: $break) {
            flex-basis: calc(
                #{percentage(1 / $fraction)} -
                #{$list-card-gutter}
            );
            max-width: calc(
                #{percentage(1 / $fraction)} -
                #{$list-card-gutter}
            );

            @include ie-gte-10 {
                width: calc(
                    #{percentage(1 / $fraction)} -
                    #{$list-card-gutter}
                );
            }
        }
    }

    @media (min-width: nth($list-card-breaks, 1)) {
        display: flex;
        margin-right: $list-card-gutter;

        @include ie-gte-10 {
            -ms-flex-preferred-size: auto;
        }
    }

    @supports (display: grid) {
        @media (min-width: nth($list-card-breaks, 1)) {
            margin-right: 0;
            max-width: none;

            &[class][class] {   /* 1 */
                margin-bottom: 0;
            }
        }
    }
}

/**
 * Animations.
 */

/**
 * Card list item, enter.
 */

@keyframes lst-card__item--enter {
    0% {
        opacity: 0;
        transform:
            scale(0.25, 1.5)
            translateY(20%);
    }
    100% {
        opacity: 1;
        transform:
            scale(1, 1)
            translateY(0);
    }
}
