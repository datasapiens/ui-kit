/**
 * Component Indicator/Sort.
 *
 * @requires {function}    px-to-em
 * @requires {function}    px-to-rem
 * @requires {mixin}       size
 * @requires {placeholder} %ico
 * @requires ico
 */

$indent: px-to-em($indicator-sort-indent);

// =============================================================================
// Sort indicator
// =============================================================================

.ind-sort {
    display: inline-flex;
    cursor: pointer;
    flex-direction: column;
    text-decoration: none;
}

/**
 * Modifiers.
 */

/**
 * Sort indicator, after.
 */

.ind-sort {
    &.--after {
        margin-left: $indent;
    }
}

/**
 * Sort indicator, before.
 */

.ind-sort {
    &.--before {
        margin-right: $indent;
    }
}

/**
 * Sort indicator, debug mode.
 */

.ind-sort {
    &.--debug {
        .ind-sort__unit {
            font-size: px-to-rem(5 * $indicator-sort-font-size);

            &.--asc {
                background-color: rgba(cyan, 0.5);
            }
            &.--dsc {
                background-color: rgba(red, 0.5);
            }
        }
    }
}

/**
 * States.
 */

/**
 * Sort indicator, ascending.
 */

.ind-sort {
    &.is-asc {
        .ind-sort__unit {
            &.--asc {
                @extend %ind-sort__unit::active;
            }
        }
    }
}

/**
 * Sort indicator, descending.
 */

.ind-sort {
    &.is-dsc {
        .ind-sort__unit {
            &.--dsc {
                @extend %ind-sort__unit::active;
            }
        }
    }
}

/**
 * Context.
 */

// .has-component {}

/**
 * Animations.
 */

// @keyframes component-animation {}

// =============================================================================
// Subcomponents
// =============================================================================

// Sort indicator unit
// =============================================================================

.ind-sort__unit {
    @include size(
        map-get($indicator-sort-unit-size, width),
        map-get($indicator-sort-unit-size, height)
    );

    display: flex;
    font-size: px-to-em($indicator-sort-font-size);
    overflow: hidden;
    position: relative;
    text-decoration: none;

    &::after,
    &::before {
        @extend %ico !optional;
    }

    &::after {
        left: 0;
        position: absolute;
    }
    &::before {
        opacity: 0;
        transition: opacity 0.3s;
    }
}

/**
 * Modifiers.
 */

/**
 * Sort indicator unit, ascending.
 */

.ind-sort__unit {
    &.--asc {
        $ico: map-fetch($indicator-sort-unit-icon, asc);

        // align-items: flex-start;

        &::after {
            @extend %ico--#{map-fetch($ico, initial)} !optional;
        }
        &::before {
            @extend %ico--#{map-fetch($ico, active)} !optional;
        }
    }
}

/**
 * Sort indicator unit, descending.
 */

.ind-sort__unit {
    &.--dsc {
        $ico: map-fetch($indicator-sort-unit-icon, dsc);

        align-items: flex-end;

        &::after {
            @extend %ico--#{map-fetch($ico, initial)} !optional;
        }
        &::before {
            @extend %ico--#{map-fetch($ico, active)} !optional;
        }
    }
}

/**
 * States.
 */

/**
 * Sort indicator unit, active.
 */

%ind-sort__unit::active {
    &::before {
        opacity: 1;
    }
}
