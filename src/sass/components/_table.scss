/**
 * Component Table.
 *
 * @requires {function} px-to-em
 */

// =============================================================================
// Table
// =============================================================================

.tbl {
    @include defineColor(--table-background-color, var(--white-color));
    @include defineColor(--table-thead-background-color, var(--white-color));
    @include defineColor(--table-thead-color, var(--base-color));
    @include defineColor(--table-tbody-color, var(--base-color));
    @include defineColor(--table-tfoot-color, var(--base-color));
    @include defineColor(--table-cell-border-color, var(--neutral-80-color));
    @include defineColor(--table--edge-border-color, var(--neutral-80-color));
    @include defineColor(--table--line-border-color, var(--neutral-80-color));
    @include defineColor(--table--stripe--even-row-background-color, var(--neutral-70-color-opacity-23));
    @include defineColor(--table--stripe--odd-row-background-color, var(--neutral-70-color-opacity-23));
    @include defineColor(--table--primary-background-color, var(--white-color));
    @include defineColor(--table-thead--primary-background-color, var(--neutral-90-color)); 
    @include defineColor(--table--secondary-background-color, var(--white-color));
    @include defineColor(--table-thead--secondary-background-color, var(--white-color));
    @include defineColor(--table-cell--is-monochrome-color, var(--neutral-10-color));
    @include defineColor(--table__group-border-top-color, var(--neutral-70-color));
    @include defineColor(--table__group--active-background-color, var(--tertiary-100-color));
    @include defineColor(--table__group--active-color, var(--black-color));
    @include defineColor(--table__group--bold-background-color, var(--tertiary-100-color-opacity-80));
    @include defineColor(--table__group--bold-color, var(--black-color));
}

.tbl {
    border-radius: $table-border-radius;
    font-size: px-to-rem($table-font-size);
    line-height: $table-line-height-ratio;

    caption {
        padding: {
            left: 2 * $table-cell-indent;
            right: 2 * $table-cell-indent;
        }
    }

    td,
    th {
        padding: {
            bottom: 0.75 * $table-cell-indent;
            left: $table-cell-indent;
            right: $table-cell-indent;
            top: 0.75 * $table-cell-indent;
        }
        transition: background-color 0.2s;
        vertical-align: baseline;
    }

    tr {
        &:first-child {
            td,
            th {
                &:first-child {
                    border-top: {
                        left-radius: $table-border-radius;
                    }
                }
                &:last-child {
                    border-top: {
                        right-radius: $table-border-radius;
                    }
                }
            }
        }
    }

    thead {
        border-top: {
            left-radius: $table-border-radius;
            right-radius: $table-border-radius;
        }
        th {
            font-size: 0.9em;
        }
    }

    tbody {
        tr:last-child {
            td,
            th {
                &:first-child {
                    border-bottom: {
                        left-radius: $table-border-radius;
                    }
                }
                &:last-child {
                    border-bottom: {
                        right-radius: $table-border-radius;
                    }
                }
            }
        }
    }

    thead + tbody {
        tr:first-child {
            td,
            th {
                &:first-child,
                &:last-child {
                    border-radius: 0;
                }
            }
        }
    }

    // Apply selected properties.
    &:not(.--rack) {
        background-color: map-get($table-background, body);
        background-color: var(--table-background-color, map-get($table-background, body));

        box-shadow: $table-box-shadow;

        @if map-get($table-background, head) != map-get($table-background, body) {
            thead {
                background-color: map-get($table-background, head);
                background-color: var(--table-thead-background-color, map-get($table-background, head));
            }
        }

        thead {
            color: map-get($table-color, head);
            color: var(--table-thead-color, map-get($table-color, head));

            tr:not(:first-child) {
                td,
                th {
                    @extend %tbl__group;
                }
            }
        }

        thead + tbody {
            tr:first-child {
                td,
                th {
                    @extend %tbl__group;
                }
            }
        }

        tbody {
            color: map-get($table-color, body);
            color: var(--table-tbody-color, map-get($table-color, body));
        }

        tbody + tfoot {
            tr:first-child {
                td,
                th {
                    @extend %tbl__group;
                }
            }
        }

        tfoot {
            color: map-get($table-color, foot);
            color: var(--table-tfoot-color, map-get($table-color, foot));
        }
    }
}

/**
 * Modifiers.
 */

/**
 * Table, layout auto.
 */

.tbl {
    &.--auto {
        table-layout: auto;
    }
}

/**
 * Table, vertical lines (aka bars).
 */

%tbl--bar {
    td,
    th {
        &:not(:last-of-type) {
            border-right: $table-cell-border-size solid $table-cell-border-color;
            border-right: $table-cell-border-size solid var(--table-cell-border-color, $table-cell-border-color);
        }
    }
}

.tbl {
    &.--bar {
        @extend %tbl--bar;
    }
}

/**
 * Table, cell content horizontaly centered.
 */

.tbl {
    &.--center {
        td,
        th {
            text-align: center;
        }
    }
}

/**
 * Table, compact.
 */

%tbl--compact {
    caption {
        padding: {
            left: 1.5 * $table-cell-indent;
            right: 1.5 * $table-cell-indent;
        }
    }

    td,
    th {
        padding: 0.5 * $table-cell-indent;
    }
}

.tbl {
    &.--compact {
        @extend %tbl--compact;
    }
}

/**
 * Table, edge (aka border).
 */

%tbl--edge {
    border: $table--edge-border-size solid $table--edge-border-color;
    border: $table--edge-border-size solid var(--table--edge-border-color, $table--edge-border-color);
}

.tbl {
    &.--edge {
        @extend %tbl--edge;
    }
}

/**
 * Table, layout fixed.
 */

.tbl {
    &.--fix {
        table-layout: fixed;
    }
}

/**
 * Table, grid (aka bars and lines combo).
 */

%tbl--grid {
    @extend %tbl--bar;
    @extend %tbl--line;
}

.tbl {
    &.--grid {
        @extend %tbl--grid;
    }
}

/**
 * Table, horizontal lines.
 */

%tbl--line {
    tbody {
        tr:not(:first-of-type) {
            td,
            th {
                border-top: $table-cell-border-size solid $table-cell-border-color;
                border-top: $table-cell-border-size solid var(--table--line-border-color, $table-cell-border-color);
            }
        }
    }
}

.tbl {
    &.--line {
        @extend %tbl--line;
    }
}

/**
 * Table, cell content verticaly centered.
 */

.tbl {
    &.--middle {
        td,
        th {
            vertical-align: middle;
        }
    }
}

/**
 * Table, print.
 */

.tbl {
    &.--print {
        @extend %tbl--rack;

        border: 0;
        padding: 0 !important;
        font-size: $table--print-font-size;
    }
}

/**
 * Table, rack (aka container).
 */

%tbl--rack {
    caption,
    td,
    th {
        &:first-child {
            padding-left: 0;
        }
        &:last-child {
            padding-right: 0;
        }
    }
}

.tbl {
    &.--rack {
        @extend %tbl--rack;
    }
}

/**
 * Table, cell content aligned to right.
 */

.tbl {
    &.--right {
        td,
        th {
            text-align: right;
        }
    }
}

/**
 * Table, stripes.
 */

.tbl {
    &.--stripe {
        &:not(.is-monochrome) {
            $color: rgba($table--stripe-row-background, 0.225);

            &.--even {
                tbody {
                    tr:nth-child(even):not(.--bold) {
                        background-color: $color;
                        background-color: var(--table--stripe--even-row-background-color, $color);
                    }
                }
            }
            &.--odd {
                tbody {
                    tr:nth-child(odd):not(.--bold) {
                        background-color: $color;
                        background-color: var(--table--stripe--odd-row-background-color, $color);
                    }
                }
            }
        }
    }
}

/**
 * Table, cell content verticaly aligned to top.
 */

.tbl {
    &.--top {
        td,
        th {
            vertical-align: top;
        }
    }
}

/**
 * Table, primary.
 */

.tbl {
    &.--primary {
        @extend %tbl--edge;
        @extend %tbl--grid;

        background-color: map-get($table--primary-background, body);
        background-color: var(--table--primary-background-color, map-get($table--primary-background, body));

        @if $table--primary-border-size {
            border-width: $table--primary-border-size;
        }
        @if $table--primary-indent {
            padding: $table--primary-indent;
        }
        @if map-get($table--primary-background, head) != map-get($table--primary-background, body) {
            thead {
                background-color: map-get($table--primary-background, head);
                background-color: var(--table-thead--primary-background-color, map-get($table--primary-background, head));
            }
        }
    }
}

/**
 * Table, secondary.
 */

.tbl {
    &.--secondary {
        @extend %tbl--bar;
        @extend %tbl--edge;

        background-color: map-get($table--secondary-background, body);
        background-color: var(--table--secondary-background-color, map-get($table--secondary-background, body));

        @if $table--secondary-border-size {
            border-width: $table--secondary-border-size;
        }
        @if $table--secondary-indent {
            padding: $table--secondary-indent;
        }
        @if map-get($table--secondary-background, head) != map-get($table--secondary-background, body) {
            thead {
                background-color: map-get($table--secondary-background, head);
                background-color: var(--table-thead--secondary-background-color, map-get($table--secondary-background, head));
            }
        }
    }
}

/**
 * States.
 */

/**
 * Table, active.
 */

.tbl {
    &.is-active[class][class][class] {
        tbody {
            tr:hover {
                @extend %tbl__group--active;

                // td,
                // th {
                //     @extend %tbl__group--active;
                // }
            }
        }
    }
}

/**
 * Table, monochrome.
 */

.tbl {
    &.is-monochrome {
        td,
        th {
            background: none !important;
            color: map-fetch($color-set, neutral, 10) !important;
            color: var(--table-cell--is-monochrome-color, map-fetch($color-set, neutral, 10) !important);
        }
    }
}

/**
 * Context.
 */

// .has-component {}

// =============================================================================
// Subcomponents
// =============================================================================

// Table group
// =============================================================================

%tbl__group {
    border-top: $table-group-border-size solid $table-group-border-color;
    border-top: $table-group-border-size solid var(--table__group-border-top-color, $table-group-border-color);
}

/**
 * Modifiers.
 */

/**
 * Table group, active.
 */

%tbl__group--active {
    background-color: rgba($table-group--active-background, 1);
    background-color: var(--table__group--active-background-color, rgba($table-group--active-background, 1));

    color: $table-group--active-color;
    color: var(--table__group--active-color, $table-group--active-color);
}

/**
 * Table group, bold.
 */

%tbl__group--bold {
    background-color: rgba($table-group--bold-background, 0.5);
    background-color: var(--table__group--bold-background-color, rgba($table-group--bold-background, 0.5));

    color: $table-group--bold-color;
    color: var(--table__group--bold-color, $table-group--bold-color);
}

// Table column
// =============================================================================

.tbl__column {}

/**
 * Modifiers.
 */

/**
 * Table column, bold.
 */

.tbl__column {
    &.--bold {
        @extend %tbl__group--bold;
    }
}

/**
 * States.
 */

/**
 * Table column, active.
 * 1. We need to increase specifity.
 */

.tbl__column {
    &.is-active[class] {    /* 1 */
        @extend %tbl__group--active;
    }
}

// Table row
// =============================================================================

.tbl__row {}

/**
 * Modifiers.
 */

/**
 * Table row, bold.
 */

.tbl__row {
    &.--bold {
        @extend %tbl__group--bold;
    }
}

/**
 * States.
 */

/**
 * Table row, active.
 * 1. We need to increase specifity.
 */

.tbl__row {
    &.is-active[class] {        /* 1 */
        td,
        th {
            @extend %tbl__group--active;
        }
    }
}

// Table cell
// =============================================================================

.tbl__cell {}

/**
 * Modifiers.
 */

/**
 * Table cell, bold.
 */

.tbl__cell {
    &.--bold {
        @extend %tbl__group--bold;
    }
}

/**
 * States.
 */

/**
 * Table cell, active.
 */

.tbl__cell {
    &.is-active {
        @extend %tbl__group--active;
    }
}
