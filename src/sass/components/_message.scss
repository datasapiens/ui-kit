/**
 * Component Message.
 *
 * @requires {function}    px-to-em
 * @requires {function}    px-to-rem
 * @requires {function}    rhythm-get
 * @requires {mixin}       acceleration
 * @requires {mixin}       font-size
 * @requires {mixin}       stretch
 * @requires {placeholder} %ctr--core-y
 * @requires {placeholder} %ico
 * @requires {placeholder} %ico--ios-close-outline
 * @requires {variable}    $animation-easing
 * @requires {variable}    $icon-set
 * @requires animation.fade
 * @requires animation.slide
 * @requires container
 * @requires ico
 */

// =============================================================================
// Message
// =============================================================================

.msg {
    @extend .msg.--neutral;
    @include acceleration;

    animation:
        slide--down-reverse 0.2s 0.4s map-get($animation-easing, in-out-circ) forwards,
        fade--in 0.3s 0.5s both;
    border: $message-border-size solid $message-border-color;
    border-radius: $message-border-radius;
    box-shadow: $message-box-shadow;
    color: $message-color;

    @if $message-font-size != $base-font-size {
        font-size: px-to-rem($message-font-size);
    }
    @if $message-font-weight != $base-font-weight {
        font-weight: $message-font-weight;
    }
    @if $message-line-height-ratio != inherit {
        line-height: $message-line-height-ratio;
    }

    margin-bottom: rhythm-get();
    padding:
        map-get($message-indent, vertical)
        map-get($message-indent, horizontal);
    position: relative;

    // This is not possible, because angular shows/hides elements
    //  that already exist in the DOM tree.
    p + p {
        margin-top: (-1) * rhythm-get(0.25);
    }

    a {
        color: inherit;
    }
}

/**
 * Modifiers.
 */

/**
 * Message, primary.
 */

.msg {
    &.--primary {
        @extend %msg-has-icon;

        padding-left:
            $message-icon-region-size +
            map-get($message-indent, horizontal);

        &.--primary::after {
            color: rgba(#fff, 0.75);
        }

        &::before {
            @include stretch(-1px);

            animation:
                slide--right-reverse 0.2s 1.0s map-get($animation-easing, in-out-circ) forwards,
                fade--in 0.2s 1.1s both;
            border: $message-border-size solid transparent;
            border: {
                right: 0;
                radius: $message-border-radius;
                bottom-right-radius: 0;
                top-right-radius: 0;
            }
            content: "";
            right: auto;
            width: $message-icon-region-size;
        }
    }
}

/**
 * Message, secondary.
 */

.msg {
    &.--secondary {
        @extend %msg-has-icon;

        padding-left: $message-icon-region-size;
    }
}

/**
 * Message, tertiary.
 */

.msg {
    &.--tertiary {
        @extend %debug;
        @include font-size(
            $message--tertiary-font-size,
            $message--tertiary-line-height-ratio
        );
    }
}

/**
 * Message, color themes.
 */

.msg {
    @each $modifier, $theme in $message-theme {
        &.--#{$modifier} {
            background: {
                color: lighten(map-get($theme, 80), 10%);
                image: linear-gradient(
                    120deg,
                    lighten(map-get($theme, 80), 10%) 40%,
                    lighten(map-get($theme, 50), 0%)
                );
            }
            border-color: desaturate(map-get($theme, 80), 50%);

            @if map-has-key($message-theme-icon, $modifier) {
                &.--primary::after,
                &.--secondary::after {
                    @extend %ico--#{map-get($message-theme-icon, $modifier)} !optional;
                }
            }

            &.--secondary::after {
                color: rgba(map-get($theme, 50), 0.5);
            }
            &.--primary::before {
                background-color: rgba(map-get($theme, 50), 1);
                border-color: desaturate(map-get($theme, 50), 25%);
            }

            .msg__title {
                color: desaturate(
                    map-get($theme, 20),
                    90%
                );
            }

            .msg__control {
                color: map-get($theme, 0);
            }
        }
    }
}

/**
 * States.
 */

// .is-component-state

/**
 * Context.
 */

/**
 * Message, with icon.
 */

%msg-has-icon {
    &::after {
        @extend %msg__icon;

        animation: fade--in 0.3s 1.3s both;
    }
}

/**
 * Message, with control.
 */

.msg {
    &.has-control {
        padding-right:
            map-get($message-indent, horizontal) +
            $message-control-size;
    }
}

// =============================================================================
// Subcomponents
// =============================================================================

// Message title
// =============================================================================

.msg__title {
    @include font-size($message-title-font-size);

    font-weight: 400;
    margin: 0;
    text-transform: uppercase;
}

// Message icon
// =============================================================================

%msg__icon {
    @extend %ctr--core-y !optional;
    @extend %ico !optional;

    content: "";
    font-size: px-to-em($message-icon-size);
    left: 0;
    text-align: center;
    width: $message-icon-region-size !important;
}

// Message control
// =============================================================================

.msg__control {
    animation:
        slide--right-reverse 0.3s 1.0s map-get($animation-easing, in-out-circ) forwards,
        fade--in 0.2s 1.1s both;
    cursor: pointer;
    font-size: px-to-em($message-control-size);
    position: absolute;
    right: 0.5 * map-get($message-indent, horizontal);
    top: 0.5 * map-get($message-indent, vertical);

    &::before {
        @extend %ico !optional;
        @extend %ico--ios-close-outline !optional;
    }
}
