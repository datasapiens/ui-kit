/**
 * Component Tag.
 *
 * @requires {function}    px-to-rem
 * @requires {mixin}       round
 * @requires {mixin}       text-truncate
 * @requires {placeholder} %ico
 * @requires ico
 */

// =============================================================================
// Tag
// =============================================================================
.tag {
    @include defineColor(--tag-background-color, var(--neutral-80-color));
    @include defineColor(--tag-border-color, var(--neutral-80-color-darken-5));
    @include defineColor(--tag-color, var(--neutral-20-color));
    
    @include defineColor(--tag--danger-background-color, var(--danger-accent-80-color));
    @include defineColor(--tag--danger-border-color, var(--danger-accent-80-color-darken-5));
    @include defineColor(--tag--danger-color, var(--danger-accent-20-color));
    
    @include defineColor(--tag--neutral-background-color, var(--neutral-accent-80-color));
    @include defineColor(--tag--neutral-border-color, var(--neutral-accent-80-color-darken-5));
    @include defineColor(--tag--neutral-color, var(--neutral-accent-20-color));
    
    @include defineColor(--tag--notice-background-color, var(--notice-accent-80-color));
    @include defineColor(--tag--notice-border-color, var(--notice-accent-80-color-darken-5));
    @include defineColor(--tag--notice-color, var(--notice-accent-20-color));
    
    @include defineColor(--tag--success-background-color, var(--success-accent-80-color));
    @include defineColor(--tag--success-border-color, var(--success-accent-80-color-darken-5));
    @include defineColor(--tag--success-color, var(--success-accent-20-color));
    
    @include defineColor(--tag--warning-background-color, var(--warning-accent-80-color));
    @include defineColor(--tag--warning-border-color, var(--warning-accent-80-color-darken-5));
    @include defineColor(--tag--warning-color, var(--warning-accent-20-color));
    
    @include defineColor(--tag--primary-is-focused-background-color, var(--neutral-70-color));
    @include defineColor(--tag--primary-is-focused-border-color, var(--neutral-70-color-darken-5));
    @include defineColor(--tag--primary-is-focused-color, var(--black-color));
    
    @include defineColor(--tag--primary-is-focused--danger-background-color, var(--danger-accent-80-color-darken-10));
    @include defineColor(--tag--primary-is-focused--danger-border-color, var(--danger-accent-80-color-darken-15));
    @include defineColor(--tag--primary-is-focused--danger-color, var(--danger-accent-0-color));
    
    @include defineColor(--tag--primary-is-focused--neutral-background-color, var(--neutral-accent-80-color-darken-10));
    @include defineColor(--tag--primary-is-focused--neutral-border-color, var(--neutral-accent-80-color-darken-15));
    @include defineColor(--tag--primary-is-focused--neutral-color, var(--neutral-accent-0-color));
    
    @include defineColor(--tag--primary-is-focused--notice-background-color, var(--notice-accent-80-color-darken-10));
    @include defineColor(--tag--primary-is-focused--notice-border-color, var(--notice-accent-80-color-darken-15));
    @include defineColor(--tag--primary-is-focused--notice-color, var(--notice-accent-0-color));
    
    @include defineColor(--tag--primary-is-focused--success-background-color, var(--success-accent-80-color-darken-10));
    @include defineColor(--tag--primary-is-focused--success-border-color, var(--success-accent-80-color-darken-15));
    @include defineColor(--tag--primary-is-focused--success-color, var(--success-accent-0-color));
    
    @include defineColor(--tag--primary-is-focused--warning-background-color, var(--warning-accent-80-color-darken-10));
    @include defineColor(--tag--primary-is-focused--warning-border-color, var(--warning-accent-80-color-darken-15));
    @include defineColor(--tag--primary-is-focused--warning-color, var(--warning-accent-0-color));
    
    @include defineColor(--tag__control-color, inherit);
}

/**
 * 1. We need to increase specifity.
 */

.tag {
    @extend .tag.--medium;
    @extend .tag.--mean;

    $bg-color: map-get($tag-background, initial);

    align-items: center;
    background-color: $bg-color;
    background-color: var(--tag-background-color, $bg-color);

    border: $tag-border-size solid darken($bg-color, 5%);
    border: $tag-border-size solid var(--tag-border-color, darken($bg-color, 5%));

    border-radius: $tag-border-radius;
    cursor: default;
    display: inline-flex;
    max-width: $tag-length;
    position: relative;
    text: {
        decoration: none;
        shadow: $tag-text-shadow;
    }

    &[class] {          /* 1 */
        color: map-get($tag-color, initial);
        color: var(--tag-color, map-get($tag-color, initial));
    }
}

/**
 * Modifiers.
 */

/**
 * Tag, length by indentation.
 */

.tag {
    @each $modifier in map-keys($tag-indent) {
        &.--#{$modifier} {
            $indent: map-get($tag-indent, $modifier);

            padding: {
                left: $indent;
                right: $indent;
            }
        }
    }
}

/**
 * Tag, primary.
 */

.tag {
    &.--primary {
        @include round($tag--primary-border-radius);

        box-shadow: map-get($tag-box-shadow, initial);
        cursor: pointer;
        transition:
            background-color 0.2s,
            border-color 0.2s,
            box-shadow 0.2s,
            color 0.2s;
    }
}

/**
 * Tag, size.
 */

.tag {
    @each $modifier in map-keys($tag-size) {
        &.--#{$modifier} {
            $size: map-get($tag-size, $modifier);

            font: {
                size: px-to-rem(
                    map-get($tag-font-size, $modifier)
                );
            }
            height: $size;
            // line-height: $size;
            line-height: $size - 2 * $tag-border-size;
        }
    }
}

/**
 * Tag, color themes.
 */

.tag {
    @each $modifier, $theme in $tag-theme {
        &.--#{$modifier} {
            $bg-color: map-get($theme, 80);

            background-color: $bg-color;
            background-color: var(--tag--#{$modifier}-background-color, $bg-color);

            border-color: darken($bg-color, 5%);
            border-color: var(--tag--#{$modifier}-border-color, darken($bg-color, 5%));

            color: map-get($theme, 20);
            color: var(--tag--#{$modifier}-color, map-get($theme, 20));
        }
    }
}

/**
 * States.
 */

/**
 * Tag, active (aka pressed).
 */

.tag {
    &:active,
    &.is-active {
        @extend .tag:focus;
    }
}

/**
 * Tag, disabled.
 * 1. We need to increase specifity.
 */

.tag[class][class] { /* 1 */
    &:disabled,
    &.is-disabled {
        box-shadow: map-get($tag-box-shadow, disable);
        opacity: 0.5;

        &,
        .tag__control {
            cursor: not-allowed;
        }
    }
}

/**
 * Tag, focused.
 */

.tag {
    &:focus,
    &.is-focused {
        &:not(:disabled):not(.is-disabled) {
            &.--primary {
                $bg-color: map-get($tag-background, focus);

                background-color: $bg-color;
                background-color: var(--tag--primary-is-focused-background-color, $bg-color);

                border-color: darken($bg-color, 5%);
                border-color: var(--tag--primary-is-focused-border-color, darken($bg-color, 5%));

                box-shadow: map-get($tag-box-shadow, focus);
                color: map-get($tag-color, focus);
                color: var(--tag--primary-is-focused-color, map-get($tag-color, focus));

                @each $modifier, $theme in $tag-theme {
                    $bg-color: darken(map-get($theme, 80), 10%);
                    $color: map-get($theme, 0);

                    &.--#{$modifier} {
                        background-color: $bg-color;
                        background-color: var(--tag--primary-is-focused--#{$modifier}-background-color, $bg-color);

                        border-color: darken($bg-color, 5%);
                        border-color: var(--tag--primary-is-focused--#{$modifier}-border-color, darken($bg-color, 5%));

                        color: $color;
                        color: var(--tag--primary-is-focused--#{$modifier}-color, $color);
                    }
                }
            }

            .tag__control {
                opacity: 0.5;
            }
        }
    }
}

/**
 * Tag, hovered.
 */

.tag {
    &:hover,
    &.is-hovered {
        @extend .tag:focus;
    }
}

/**
 * Context.
 */

// .has-component

// =============================================================================
// Subcomponents
// =============================================================================

// Tag control
// =============================================================================

/**
 * 1. Negative margin workaround to prevent vertical crop of the tag content
 *  and enable text truncate at the same time.
 */

.tag__content {
    @include text-truncate;

    $indent: map-get($tag-indent, narrow);

    margin: (-1) * $indent 0; /* 1 */
    padding: $indent 0;       /* 1 */
}

// Tag control
// =============================================================================

/**
 * 1. We need to increase specifity.
 */

.tag__control {
    $indent: map-get($tag-indent, narrow);

    align-items: center;
    cursor: pointer;
    display: inline-flex;
    justify-content: center;
    text-decoration: none;
    transition: opacity 0.2s;

    &::before {
        @extend %ico !optional;
    }

    &[class] {          /* 1 */
        color: inherit;
        color: var(--tag__control-color, inherit);
    }

    & + & {
        margin-left: 2px;
    }
    &:first-child {
        margin-left: $indent;
    }
    &:last-child {
        margin-right: (-0.5) * $indent;
    }
}

/**
 * Modifiers.
 */

/**
 * Tag control, edit.
 */

.tag__control {
    &.--edit {
        &::before {
            @extend %ico--#{map-fetch($tag-control-icon, edit)} !optional;
        }
    }
}

/**
 * Tag control, delete.
 */

.tag__control {
    &.--delete {
        &::before {
            @extend %ico--#{map-fetch($tag-control-icon, delete)} !optional;
        }
    }
}

/**
 * States.
 */

/**
 * Tag control, hovered.
 * 1. We need to increase specifity.
 */

.tag__control[class][class][class] { /* 1 */
    &:hover {
        opacity: 1;
    }
}
