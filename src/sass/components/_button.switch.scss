/**
 * Component Button/Switch.
 *
 * @requires {placeholder} %btn
 * @requires {placeholder} %btn:disabled
 * @requires {placeholder} %btn--narrow
 * @requires {placeholder} %btn__event
 * @requires button
 */

// =============================================================================
// Button switch
// =============================================================================

.btn-switch {
    @extend %emt--alignment !optional;
    @extend %emt--medium !optional;
    @extend %emt--size !optional;

    align-items: center;
    background-color: map-get($button-switch-background, initial);
    border: {
        color: map-get($button-switch-border-color, initial);
        radius: $button-switch-border-radius;
        width: $button-switch-border-size;
        style: solid;
    }
    box-shadow: $button-switch-box-shadow;
    // color: map-get($button-switch-color, initial);
    cursor: pointer;
    display: inline-flex;
    justify-content: center;
    max-width: 100%;

    &[class] {
        padding: 0;
    }
}

/**
 * Modifiers.
 */

/**
 * Button switch, transparent.
 */

.btn-switch {
    &.--transparent {
        background-color: $button-switch--transparent-background !important;

        .btn-switch__item {
            color: $button-switch--transparent-color;
        }
    }
}

/**
 * Button switch, truncate items.
 */

.btn-switch {
    &.--truncate {
        .btn-switch__item {
            @include text-truncate;

            flex: 1;
        }
    }
}

/**
 * Button switch, primary.
 */

.btn-switch {
    &.--primary {
        background-color: map-get($button-switch--primary-background, initial);
        border-color: map-get($button-switch--primary-border-color, initial);
        // color: map-get($button-switch--primary-color, initial);

        .btn-switch__item ~ .btn-switch__item {
            border-color: inherit !important;
        }
    }
}

/**
 * Button switch, secondary.
 */

.btn-switch {
    &.--secondary {
        background-color: map-get($button-switch--secondary-background, initial);
        border-color: map-get($button-switch--secondary-border-color, initial);
        // color: map-get($button-switch--secondary-color, initial);

        .btn-switch__item ~ .btn-switch__item {
            border-color: inherit !important;
        }
    }
}

/**
 * Button switch, tertiary.
 */

.btn-switch {
    &.--tertiary {
        background-color: map-get(
            $button-switch--tertiary-background,
            initial
        );
        border-color: map-get($button-switch--tertiary-border-color, initial);
        // color: map-get($button-switch--tertiary-color, initial);

        .btn-switch__item {
            color: map-get($button-switch--tertiary-color, initial);
        }
        .btn-switch__item ~ .btn-switch__item {
            border-color: inherit !important;
        }
    }
}

/**
 * Button switch, themes.
 */

.btn-switch {
    @each $modifier, $theme in $button-switch-theme {
        $color: map-get($theme, 50);

        &.--#{$modifier} {
            @if index(neutral danger, $modifier) {
                background-color: lighten($color, 30%);
            } @else {
                background-color: lighten($color, 36%);
            }

            border-color: darken($color, 3%);

            .btn-switch__item ~ .btn-switch__item {
                border-color: inherit !important;
            }
        }
    }
}

/**
 * States.
 */

/**
 * Button switch, disabled.
 */

.btn-switch {
    &.is-disabled {
        @extend %btn:disabled !optional;

        .btn-switch__item {
            pointer-events: none;
        }
    }
}

/**
 * Button switch, hovered.
 */

.btn-switch {
    &:hover {
        &:not(.is-disabled) {
            // background-color: map-get($button-switch-background, hover);
            border-color: map-get($button-switch-border-color, hover);
            // color: map-get($button-switch-color, hover);
            // text-decoration: none;

            &.--primary {
                // background-color: map-get($button-switch--primary-background, hover);
                border-color: map-get($button-switch--primary-border-color, hover);
                // color: map-get($button-switch--primary-color, hover);
            }
            &.--secondary {
                // background-color: map-get($button-switch--secondary-background, hover);
                border-color: map-get($button-switch--secondary-border-color, hover);
                // color: map-get($button-switch--secondary-color, hover);
            }
            &.--tertiary {
                // background-color: map-get($button-switch--tertiary-background, hover);
                border-color: map-get($button-switch--tertiary-border-color, hover);
                // color: map-get($button-switch--tertiary-color, hover);
            }

            @each $modifier, $theme in $button-switch-theme {
                $color: lighten(map-get($theme, 20), 8%);

                &.--#{$modifier} {
                    // background-color: $color;
                    border-color: darken($color, 3%);
                    // color: $white;
                }
            }
        }
    }
}

/**
 * Context.
 */

// .has-component {}

/**
 * Animations.
 */

// @keyframes component-animation {}

// =============================================================================
// Subcomponents
// =============================================================================

// Button switch item
// =============================================================================

.btn-switch__item {
    @extend %btn !optional;
    @extend %btn--narrow !optional;
    @extend %btn__event !optional;

    background-color: transparent;
    border: {
        radius: 0;
        width: 0;
    }
    box-shadow: none;
    display: inline-block;
    margin: 0;
    text-transform: uppercase;
    transition:
        background-color 0.2s,
        color 0.2s;

    &[class] {
        font: {
            size: inherit;
            // weight: inherit;
        }
        height: auto;
        line-height: inherit;
    }

    & ~ & {
        border-left-width: $button-switch-border-size;
    }
}

/**
 * States.
 */

/**
 * Button switch item, active.
 */

.btn-switch__item {
    &:active,
    &.is-active {
        & {
            background-color: map-get($button-switch-background, active);

            @at-root {
                // primary
                .btn-switch.--primary & {
                    background-color: map-get($button-switch--primary-background, active);
                    color: map-get($button-switch--primary-color, active);
                }

                // secondary
                .btn-switch.--secondary & {
                    background-color: map-get($button-switch--secondary-background, active);
                    color: map-get($button-switch--secondary-color, active);
                }

                // tertiary
                .btn-switch.--tertiary & {
                    background-color: map-get($button-switch--tertiary-background, active);
                    color: map-get($button-switch--tertiary-color, active);
                }

                // themes
                @each $modifier, $theme in $button-switch-theme {
                    $color: lighten(map-get($theme, 20), 8%);

                    .btn-switch.--#{$modifier} & {
                        background-color: $color;
                        color: $white;
                    }
                }
            }
        }
    }
}

/**
 * Button switch, focused.
 */

.btn-switch__item {
    &:focus {
        &:not(.is-readonly) {
            @at-root {
                .btn-switch:not(.is-disabled) & {
                    background-color: map-get($button-switch-background, focus);
                }

                // primary
                .btn-switch.--primary & {
                    background-color: map-get($button-switch--primary-background, focus);
                    color: map-get($button-switch--primary-color, focus);
                }

                // secondary
                .btn-switch.--secondary & {
                    background-color: map-get($button-switch--secondary-background, focus);
                    color: map-get($button-switch--secondary-color, focus);
                }

                // tertiary
                .btn-switch.--tertiary & {
                    background-color: map-get($button-switch--tertiary-background, focus);
                    color: map-get($button-switch--tertiary-color, focus);
                }

                // themes
                @each $modifier, $theme in $button-switch-theme {
                    $color: lighten(map-get($theme, 20), 8%);

                    .btn-switch.--#{$modifier} & {
                        background-color: $color;
                        color: $white;
                    }
                }
            }
        }
    }
}

/**
 * Button switch item, checked.
 */

// .btn-switch__item {
//     @at-root .btn-switch {
//         :checked + .btn-switch__item {
//             @extend .btn-switch__item:active;
//         }
//     }
// }

/**
 * Button switch item, hovered.
 */

.btn-switch__item {
    &:hover {
        @extend .btn-switch__item:focus;

        // background-color: map-get($button-switch-background, focus);
        // border-color: map-get($button-switch-border-color, focus);
        // color: map-get($button-switch-color, focus);
    }
}
