/**
 * Component List/Widget.
 */

// =============================================================================
// Widget list
// =============================================================================

.lst-widget {
    counter-reset: counter-widget;
    margin-bottom: $list-widget-gutter;

    @media (min-width: nth($list-widget-breaks, 1)) {
        display: flex;
        flex: {
            direction: column;
            flow: row wrap;
        }
        margin: {
            right: (-1) * $list-widget-gutter;
        }
        width: calc(100% + #{$list-widget-gutter});
    }

    @supports (display: grid) {
        /* autoprefixer: off */
        @media (min-width: nth($list-widget-breaks, 1)) {
            display: grid;
            grid: {
                auto-flow: dense;
                gap: $list-widget-gutter;
                template-columns: repeat(4, 1fr);
            }
            margin: {
                right: 0;
            }
            width: 100%;
        }
    }

    @media print {
        display: block;

        .lst-widget__item:not(:last-of-type) {
            page-break-after: always;
        }

        .lst-widget__item {
            .lst-widget__item {
                page-break-after: unset;
            }
        }
    }
}

/**
 * Modifiers.
 */

/**
 * Widget list, debug mode.
 */

.lst-widget {
    &.--debug {
        margin-bottom: 3 * $list-widget-gutter;

        @supports (display: grid) {
            /* autoprefixer: off */
            background-color: pink;
        }

        .lst-widget__item {
            background-color: cornflowerblue;
            counter-increment: counter-widget;
            min-height: 4em;

            &::before {
                font-size: 3em;
                color: white;
                content: counter(counter-widget);
            }
        }

        .lst-widget__item {
            &.--primary {
                background-color: crimson;

                &::after {
                    font-size: 1em;
                    color: white;
                    content: " / primary";
                }
            }

            &.--secondary {
                background-color: slateblue;

                &::after {
                    font-size: 1em;
                    color: white;
                    content: " / secondary";
                }
            }
        }
    }
}

/**
 * Widget list, print view.
 */

.lst-widget {
    &.--print {
        .lst-widget__item {
            @extend .lst-widget__item.--primary;
        }
    }
}

/**
 * States.
 */

// .is-component-state {}

// .component {
//     &.is-state {}
// }

/**
 * Context.
 */

// .has-component {}

// =============================================================================
// Subcomponents
// =============================================================================

// Widget list item
// =============================================================================

.lst-widget__item {
    margin: {
        bottom: $list-widget-gutter;
    }

    @media (min-width: nth($list-widget-breaks, 1)) {
        flex: 0;
        flex-basis: calc(#{percentage(1 / 2)} - #{$list-widget-gutter});
        margin: {
            right: $list-widget-gutter;
        }
    }

    @supports (display: grid) {
        /* autoprefixer: off */
        @media (min-width: nth($list-widget-breaks, 1)) {
            grid-column-start: span 2;
            margin: {
                bottom: 0;
                right: 0;
            }
        }
    }

    @media print {
        margin: {
            bottom: $list-widget-gutter;
        }
    }
}

/**
 * Modifiers.
 */

/**
 * Widget list item, primary.
 */

.lst-widget__item {
    &.--primary {
        @media (min-width: nth($list-widget-breaks, 1)) {
            flex-basis: calc(#{percentage(1 / 1)} - #{$list-widget-gutter});

            @supports (display: grid) {
                /* autoprefixer: off */
                grid-column-start: span 4;
            }
        }
    }
}

/**
 * Widget list item, secondary.
 */

.lst-widget__item {
    &.--secondary {
        @media (min-width: nth($list-widget-breaks, 1)) {
            flex-basis: calc(#{percentage(1 / 4)} - #{$list-widget-gutter});

            @supports (display: grid) {
                /* autoprefixer: off */
                grid-column-start: span 1;
            }
        }
    }
}
